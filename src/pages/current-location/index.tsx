import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";

import Map from "../../components/Map";

import client from "@/apollo";
import { GET_LOCATIONS } from "@/apollo/gql";
import { GetStaticProps } from "next";
import LocationCard from "@/components/LocationCard";
import useWindowDimensions from "@/hooks/useWindowDimensions";
// import styles from "@/styles/Home.module.css";

const inter = Inter({ subsets: ["latin"] });

export default function Home({ allLocations }) {
  const winDim = useWindowDimensions();
  if (winDim.width < 600)
    return (
      <>
        <Head>
          <title>Find a Loo - Current Location</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div
          style={{
            display: "flex",
            flexDirection: "column",
            flex: 1,
            width: "100%",
          }}
        >
          <div style={{ display: "flex", height: "30vh", minHeight: "180px" }}>
            <Map
              marker_locations={allLocations.map(
                (location) =>
                  location.address.street_address +
                  " " +
                  location.address.city_state_zip
              )}
            />
          </div>
          <div
            style={{
              display: "flex",
              flexDirection: "column",
              flex: 1,
              justifyContent: "center",
              alignItems: "center",
              padding: 14,
              height: "100%",
              minHeight: "200px",
            }}
          >
            <div
              style={{
                backgroundColor: "#6A77FD",
                display: "flex",
                flex: "1 1 auto",
                flexDirection: "column",
                alignItems: "center",
                width: "100%",
                maxWidth: 600,
                borderRadius: 25,
                padding: "4px 8px 10px 8px",
                position: "relative",
                overflow: "hidden",
                overflowY: "scroll",
                height: "0",
                // scrollbarGutter: "auto",
              }}
            >
              <h3
                style={{
                  fontFamily: "Cinzel, sans-serif",
                  fontSize: 24,
                  fontWeight: "lighter",
                  margin: 10,
                  display: "flex",
                }}
              >
                Free Loo Near You
              </h3>
              <div
                style={{
                  display: "flex",
                  flexDirection: "column",
                  flex: 1,
                  gap: 10,
                  width: "100%",
                }}
              >
                {allLocations.map((location, i) => (
                  <LocationCard location={location} key={i} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </>
    );
  return (
    <>
      <Head>
        <title>Find a Loo - Current Location</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        style={{
          display: "flex",
          flexDirection: "column",
          flex: 1,
          width: "100%",
        }}
      >
        <div style={{ display: "flex", height: "30vh", minHeight: "180px" }}>
          <Map
            marker_locations={allLocations.map(
              (location) =>
                location.address.street_address +
                " " +
                location.address.city_state_zip
            )}
          />
        </div>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            flex: 1,
            justifyContent: "center",
            alignItems: "center",
            padding: 30,
            height: "100%",
            minHeight: "300px",
          }}
        >
          <div
            style={{
              // scrollbarColor: "red",
              // scrollbarWidth: "thin",
              display: "flex",
              flex: "1 1 auto",
              width: "100%",
              maxWidth: 600,
              height: "0",
              overflow: "hidden",
              borderRadius: 25,
            }}
          >
            <div
              className="scroll"
              style={{
                backgroundColor: "#6A77FD",
                paddingBottom: 20,
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                position: "relative",
                height: "100%",
                padding: "10px 20px 30px 20px",
                width: "100%",
                overflow: "hidden",
                overflowY: "scroll",
              }}
            >
              <h3
                style={{
                  fontFamily: "Cinzel, sans-serif",
                  fontSize: 34,
                  fontWeight: "lighter",
                  margin: 30,
                  display: "flex",
                }}
              >
                Free Loo Near You
              </h3>
              <div
                style={{
                  display: "flex",
                  flexDirection: "column",
                  flex: 1,
                  gap: 10,
                  width: "100%",
                }}
              >
                {allLocations.map((location, i) => (
                  <LocationCard location={location} key={i} />
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
export const getStaticProps: GetStaticProps = async ({ params }) => {
  const results = await client.query({
    query: GET_LOCATIONS,
  });
  if (!results) {
    return { notFound: true };
  }

  return {
    props: {
      allLocations: results.data.allLocation,
    },
    revalidate: 600,
  };
};
